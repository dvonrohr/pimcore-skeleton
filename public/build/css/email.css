/*!****************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[2]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[3]!./assets/styles/email.scss ***!
  \****************************************************************************************************************************************************************************************************************************************************************************/
body {
  width: 100% !important;
  min-width: 100%;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  margin: 0;
  Margin: 0;
  padding: 0;
  box-sizing: border-box;
}

img {
  outline: none;
  text-decoration: none;
  -ms-interpolation-mode: bicubic;
  width: auto;
  max-width: 100%;
  clear: both;
  display: block;
}

center {
  width: 100%;
}

a img {
  border: none;
}

table {
  border-spacing: 0;
  border-collapse: collapse;
}

td, th {
  word-wrap: break-word;
  -webkit-hyphens: auto;
  hyphens: auto;
  border-collapse: collapse !important;
  box-sizing: border-box;
}

table, tr, td, th {
  padding: 0;
  vertical-align: top;
  text-align: left;
}

@media only screen {
  html {
    min-height: 100%;
    background: #f3f3f3;
  }
}
table.body {
  background: #f3f3f3;
  height: 100%;
  width: 100%;
}

img.float-center {
  margin: 0 auto;
  Margin: 0 auto;
  float: none;
  text-align: center;
}

table.float-center,
td.float-center,
th.float-center {
  margin: 0 auto;
  Margin: 0 auto;
  float: none;
  text-align: center;
}

body,
table.body,
h1,
p,
td,
th {
  color: #0a0a0a;
  font-family: "Open Sans", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  font-weight: 400;
  padding: 0;
  margin: 0;
  Margin: 0;
  text-align: left;
  line-height: 1.3;
}

h1 {
  color: inherit;
  word-wrap: normal;
  font-family: "Open Sans", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  font-weight: 700;
  margin-bottom: 10px;
  Margin-bottom: 10px;
}

h1 {
  font-size: 34px;
}

body,
table.body,
p,
td,
th {
  font-size: 16px;
  line-height: 1.3;
}

p {
  margin-bottom: 10px;
  Margin-bottom: 10px;
}
p a {
  margin: default;
  Margin: default;
}

a {
  color: #6428b4;
  text-decoration: none;
  font-family: "Open Sans", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  font-weight: 400;
  padding: 0;
  text-align: left;
  line-height: 1.3;
}
a:hover {
  color: rgb(76.8181818182, 30.7272727273, 138.2727272727);
}
a:active {
  color: rgb(76.8181818182, 30.7272727273, 138.2727272727);
}
a:visited {
  color: #6428b4;
}

h1 a,
h1 a:visited {
  color: #6428b4;
}

span.preheader {
  display: none !important;
  visibility: hidden;
  mso-hide: all !important;
  font-size: 1px;
  color: #f3f3f3;
  line-height: 1px;
  max-height: 0px;
  max-width: 0px;
  opacity: 0;
  overflow: hidden;
}
table.button {
  width: auto;
  margin: 0 0 15px 0;
  Margin: 0 0 15px 0;
}
table.button table td {
  text-align: left;
  color: #fefefe;
  background: #6428b4;
  border: 2px solid #6428b4;
}
table.button table td a {
  font-family: "Open Sans", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  font-size: 16px;
  font-weight: bold;
  color: #fefefe;
  text-decoration: none;
  text-align: left;
  display: inline-block;
  padding: 8px 16px 8px 16px;
  border: 0 solid #6428b4;
  border-radius: 3px;
}

table.button:not(.expand):not(.expanded) table {
  width: auto;
}

table.button:hover table tr td a,
table.button:active table tr td a,
table.button table tr td a:visited {
  color: #fefefe;
}

table.button.expand {
  width: 100%;
}
table.button.expand table {
  width: 100%;
}
table.button.expand table a {
  text-align: center;
  width: 100%;
  padding-left: 0;
  padding-right: 0;
}
table.button.expand center {
  min-width: 0;
}

table.button:hover table td,
table.button:visited table td,
table.button:active table td {
  background: rgb(76.8181818182, 30.7272727273, 138.2727272727);
  color: #fefefe;
}

table.button:hover table a,
table.button:visited table a,
table.button:active table a {
  border: 0 solid rgb(76.8181818182, 30.7272727273, 138.2727272727);
}

table.button.success table td {
  background: #32d296;
  border: 0px solid #32d296;
}
table.button.success table a {
  border: 0 solid #32d296;
}

table.button.success:hover table td {
  background: rgb(37.62, 171.38, 121.22);
}
table.button.success:hover table a {
  border: 0 solid rgb(37.62, 171.38, 121.22);
}

table.button.warning table td {
  background: #faa05a;
  border: 0px solid #faa05a;
}
table.button.warning table a {
  border: 0px solid #faa05a;
}

table.button.warning:hover table td {
  background: rgb(248.5, 131.5, 40.5);
}
table.button.warning:hover table a {
  border: 0px solid rgb(248.5, 131.5, 40.5);
}

table.menu {
  width: 600px;
}

.menu[align=center] {
  width: auto;
}

.menu[align=center] tr {
  text-align: center;
}

@media only screen and (max-width: 615px) {
  table.body img {
    width: auto;
    height: auto;
  }
  table.body center {
    min-width: 0 !important;
  }
  table.menu {
    width: 100% !important;
  }
  table.menu td,
  table.menu th {
    width: auto !important;
    display: inline-block !important;
  }
  table.menu[align=center] {
    width: auto !important;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/